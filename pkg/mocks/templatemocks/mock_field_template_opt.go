// Code generated by mockery v2.50.0. DO NOT EDIT.

package templatemocks

import (
	template "github.com/skiff-sh/pilot/pkg/template"
	mock "github.com/stretchr/testify/mock"
)

// FieldTemplateOpt is an autogenerated mock type for the FieldTemplateOpt type
type FieldTemplateOpt struct {
	mock.Mock
}

type FieldTemplateOpt_Expecter struct {
	mock *mock.Mock
}

func (_m *FieldTemplateOpt) EXPECT() *FieldTemplateOpt_Expecter {
	return &FieldTemplateOpt_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: o
func (_m *FieldTemplateOpt) Execute(o *template.FieldTemplateOpts) {
	_m.Called(o)
}

// FieldTemplateOpt_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type FieldTemplateOpt_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - o *template.FieldTemplateOpts
func (_e *FieldTemplateOpt_Expecter) Execute(o interface{}) *FieldTemplateOpt_Execute_Call {
	return &FieldTemplateOpt_Execute_Call{Call: _e.mock.On("Execute", o)}
}

func (_c *FieldTemplateOpt_Execute_Call) Run(run func(o *template.FieldTemplateOpts)) *FieldTemplateOpt_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*template.FieldTemplateOpts))
	})
	return _c
}

func (_c *FieldTemplateOpt_Execute_Call) Return() *FieldTemplateOpt_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *FieldTemplateOpt_Execute_Call) RunAndReturn(run func(*template.FieldTemplateOpts)) *FieldTemplateOpt_Execute_Call {
	_c.Run(run)
	return _c
}

// NewFieldTemplateOpt creates a new instance of FieldTemplateOpt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFieldTemplateOpt(t interface {
	mock.TestingT
	Cleanup(func())
}) *FieldTemplateOpt {
	mock := &FieldTemplateOpt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
